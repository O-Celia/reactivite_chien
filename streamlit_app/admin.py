import streamlit as st
import requests

API_URL = "http://localhost:8000"

def app():
    st.title("Administration : D√©clencheurs et R√©actions")

    token = st.session_state.get("token")
    if not token:
        st.error("Vous devez √™tre connect√© pour g√©rer le traitement des d√©clencheurs et r√©actions.")
        return

    # D√©clencheurs
    st.subheader("D√©clencheurs")
    
    # Afficher les d√©clencheurs existants
    headers = {"Authorization": f"Bearer {token}"}
    user_resp = requests.get(f"{API_URL}/users/me", headers=headers)
    user_id = user_resp.json().get("id")
    triggers = requests.get(f"{API_URL}/triggers/", params={"user_id": user_id}, headers=headers).json()
    for trigger in triggers:
        col1, col2 = st.columns([3, 1])
        with col1:
            new_name = st.text_input(f"Modifier '{trigger['name']}'", value=trigger['name'], key=f"trigger_{trigger['id']}")
        with col2:
            if st.button("üóëÔ∏è Supprimer", key=f"delete_trigger_{trigger['id']}"):
                requests.delete(f"{API_URL}/triggers/{trigger['id']}", headers=headers)
                st.rerun()
        if new_name != trigger['name']:
            requests.put(f"{API_URL}/triggers/{trigger['id']}", headers=headers, json={"name": new_name})
            st.rerun()

    # Ajouter un nouveau d√©clencheur
    st.subheader("Ajouter un nouveau d√©clencheur")
    new_trigger_name = st.text_input("Nom du nouveau d√©clencheur", key="new_trigger_name")
    if st.button("Ajouter le d√©clencheur"):
        if new_trigger_name:
            requests.post(f"{API_URL}/triggers/", headers=headers, json={"name": new_trigger_name, "user_id": user_id})
            st.rerun()
        else:
            st.warning("Veuillez entrer un nom pour le d√©clencheur.")

    # R√©actions
    st.subheader("R√©actions")
    
    # Afficher les r√©actions existantes
    reactions = requests.get(f"{API_URL}/reactions/", params={"user_id": user_id}, headers=headers).json()
    for reaction in reactions:
        col1, col2 = st.columns([3, 1])
        with col1:
            new_name = st.text_input(f"Modifier '{reaction['name']}'", value=reaction['name'], key=f"reaction_{reaction['id']}")
        with col2:
            if st.button("üóëÔ∏è Supprimer", key=f"delete_reaction_{reaction['id']}"):
                requests.delete(f"{API_URL}/reactions/{reaction['id']}", headers=headers)
                st.rerun()
        if new_name != reaction['name']:
            requests.put(f"{API_URL}/reactions/{reaction['id']}", headers=headers, json={"name": new_name})
            st.rerun()

    # Ajouter une nouvelle r√©action
    st.subheader("Ajouter une nouvelle r√©action")
    new_reaction_name = st.text_input("Nom de la nouvelle r√©action", key="new_reaction_name")
    if st.button("Ajouter la r√©action"):
        if new_reaction_name:
            requests.post(f"{API_URL}/reactions/", headers=headers, json={"name": new_reaction_name, "user_id": user_id})
            st.rerun()
        else:
            st.warning("Veuillez entrer un nom pour la r√©action.")

